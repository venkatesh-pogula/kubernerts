---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: mysql-gp2
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: kubernetes.io/aws-ebs
parameters:
  type: gp2
  fsType: ext4
  zone: us-west-2a, us-west-2b, us-west-2c
 
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  labels:
    app: web
spec:
  storageClassName: mysql-gp2
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi      
## services created for mysql
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  type: NodePort
  selector:
    app: web
  ports:
    - port: 3306 
      targetPort: 3306
      nodePort: 30002

## deployment for mysql container
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: web
spec:
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: web
    spec:        
      containers:
        - name: mysql-container
          image: 419784164229.dkr.ecr.us-west-2.amazonaws.com/mysql:latest
          volumeMounts:
            - mountPath: "/var/lib/mysql"
              name: mysql-storage
          env:
            - name: MYSQL_DATABASE
              value: 'testing'
            - name: MYSQL_USER
              value: 'myfrstsql'
            - name: MYSQL_PASSWORD
              value: '1234'
            - name: MYSQL_ROOT_PASSWORD
              value: 'password'        
          ports:
            - containerPort: 3306  
      imagePullSecrets:
        - name: awssecerets
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc  
          